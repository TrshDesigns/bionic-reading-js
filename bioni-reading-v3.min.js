// Bionic Reading JS v3 - MIT License
// Copyright (c) 2025 TRSHDESIGNS
// Permission is hereby granted, free of charge, to any person obtaining a copy...
// (Full MIT text here: https://opensource.org/licenses/MIT)
function isVowel(char){return["a","e","i","o","u"].includes(char.toLowerCase())}const functionWords=new Set(["a","an","the","and","or","but","in","on","at","to","for","of","with","by","is","are","was","were"]);function isImportantWord(word){const lowerWord=word.toLowerCase();return!functionWords.has(lowerWord)&&word.length>3}function getBoldLength(word){const len=word.length;const isImportant=isImportantWord(word);if(len<=2)return 1;if(len<=4)return isImportant?2:1;const boldPercentage=isImportant?.5:.4;const boldLen=Math.max(2,Math.ceil(len*boldPercentage));return Math.min(boldLen,Math.floor(len/2))}function boldInitial(word){if(word.length===0)return"";const digraphs=["ch","sh","th","wh","ph","qu"];const lowerWord=word.toLowerCase();for(const digraph of digraphs){if(lowerWord.startsWith(digraph)){const boldLen=Math.max(digraph.length,getBoldLength(word));return`<b>${word.substring(0,boldLen)}</b>${word.substring(boldLen)}`}}let boldLen=getBoldLength(word);for(let i=2;i<boldLen;i++){if(isVowel(word[i])){boldLen=i;break}}return`<b>${word.substring(0,boldLen)}</b>${word.substring(boldLen)}`}function applyBionicReading(text){return text.split(/\b/).map(part=>{if(/[a-zA-Z]/.test(part)){return boldInitial(part)}return part}).join("")}function modifyParagraphs(){const paragraphs=document.querySelectorAll("p");paragraphs.forEach(p=>{Array.from(p.childNodes).forEach(node=>{if(node.nodeType===Node.TEXT_NODE){const newHTML=applyBionicReading(node.textContent);const newNode=document.createElement("span");newNode.innerHTML=newHTML;p.replaceChild(newNode,node)}})})}window.addEventListener("load",modifyParagraphs);